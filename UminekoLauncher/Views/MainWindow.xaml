<v:AnimatedWindow x:Class="UminekoLauncher.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:v="clr-namespace:UminekoLauncher.Views"
        xmlns:vm="clr-namespace:UminekoLauncher.ViewModels"
        xmlns:vc="clr-namespace:UminekoLauncher.Views.ValueConverters"
        xmlns:ctl="clr-namespace:UminekoLauncher.Views.Controls" 
        mc:Ignorable="d" Opacity="0"
        Title="海猫鸣泣之时" Width="790" Height="420" ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen" Icon="/Resources/Images/icon.ico" 
        WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        MouseLeftButtonDown="Window_MouseLeftButtonDown"
        d:DataContext="{d:DesignInstance Type=vm:MainViewModel}">
    <Window.Resources>
        <vc:MainAvailablityConverter x:Key="MainAvailablityConverter"/>
        <vc:UpdateStatusConverter x:Key="UpdateStatusConverter"/>
    </Window.Resources>
    <Grid>
        <Border CornerRadius="5">
            <Border.Background>
                <ImageBrush ImageSource="/Resources/Images/bg.jpg" Stretch="UniformToFill"/>
            </Border.Background>
        </Border>

        <StackPanel Margin="27,27,0,0">
            <StackPanel.IsEnabled>
                <MultiBinding Mode="OneWay" Converter="{StaticResource MainAvailablityConverter}">
                    <Binding Path="CanAction"/>
                    <Binding ElementName="ConfigPopup" Path="IsOpen"/>
                    <Binding ElementName="AboutPopup" Path="IsOpen"/>
                </MultiBinding>
            </StackPanel.IsEnabled>
            <StackPanel.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="VerticalAlignment" Value="Top"/>
                </Style>
            </StackPanel.Resources>

            <StackPanel Orientation="Horizontal" Width="200" Height="33">
                <StackPanel.Background>
                    <ImageBrush ImageSource="/Resources/Images/bbg.png"/>
                </StackPanel.Background>
                <StackPanel.Resources>
                    <Style TargetType="ctl:FxButton" BasedOn="{StaticResource TransparentFxButton}"/>
                    <Style TargetType="ctl:FxToggleButton" BasedOn="{StaticResource TransparentFxButton}"/>
                </StackPanel.Resources>
                <ctl:FxButton Command="{Binding ExitCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" 
                              Width="68" CornerRadius="15,0,0,15" Icon="&#xe5cd;" IconSize="28"/>
                <ctl:FxToggleButton IsChecked="{Binding ElementName=ConfigPopup, Path=IsOpen, Mode=TwoWay}"
                                    Width="64" CornerRadius="0" Icon="&#xe8b8;"/>
                <ctl:FxToggleButton IsChecked="{Binding ElementName=AboutPopup, Path=IsOpen, Mode=TwoWay}"
                                    Width="68" CornerRadius="0,15,15,0" Icon="&#xe89e;"/>
            </StackPanel>
            
            <ScrollViewer Margin="0,55,0,0" Width="320" Height="153" HorizontalAlignment="Left" VerticalAlignment="Top" VerticalScrollBarVisibility="Auto">
                <TextBlock Text="{Binding News}" FontSize="15" TextWrapping="Wrap" Foreground="#cccccc">
                    <TextBlock.Effect>
                        <DropShadowEffect ShadowDepth="2" BlurRadius="0" Direction="270" Opacity="0.4"/>
                    </TextBlock.Effect>
                </TextBlock>
            </ScrollViewer>

            <StackPanel Margin="0,25,0,0" Orientation="Horizontal">
                <ctl:FxButton Command="{Binding ActionCommand}"
                              Icon="{Binding UpdateStatus, Converter={StaticResource UpdateStatusConverter}, ConverterParameter=ActionIcon}"
                              Content="{Binding UpdateStatus, Converter={StaticResource UpdateStatusConverter}, ConverterParameter=ActionContent}"
                              Width="200" Height="43" HorizontalAlignment="Left" VerticalAlignment="Top"
                              IconMargin="-10,0,7,0" IconSize="32" FontMargin="0,-2,0,0" FontWeight="Bold" FontSize="20">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseRightButtonUp">
                            <i:InvokeCommandAction Command="{Binding VerifyCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ctl:FxButton>
                <ctl:FxButton Command="{Binding GoSurveyCommand}" Icon="&#xe9a2;" Content="" 
                              Style="{StaticResource IconFxButton}" Margin="10,0,0,0"
                              Width="55" Height="43" HorizontalAlignment="Left" VerticalAlignment="Top"
                              IconMargin="0" IconSize="32" ToolTip="填写反馈"/>
            </StackPanel>
            
            <StackPanel Margin="0,47,0,0" Orientation="Horizontal">
                <Ellipse Fill="{Binding UpdateStatus, Converter={StaticResource UpdateStatusConverter}, ConverterParameter=NotificationLight}"
                         Margin="0,2,0,0" Width="15" Height="15" VerticalAlignment="Center"/>
                <StackPanel Orientation="Horizontal" Margin="6,0,0,0" VerticalAlignment="Center">
                    <StackPanel.Effect>
                        <DropShadowEffect ShadowDepth="1" BlurRadius="0" Direction="270"/>
                    </StackPanel.Effect>
                    <TextBlock.FontSize>13</TextBlock.FontSize>
                    <TextBlock Text="{Binding UpdateStatus, Converter={StaticResource UpdateStatusConverter}, ConverterParameter=UpdateStatus}" 
                               FontWeight="{Binding UpdateStatus, Converter={StaticResource UpdateStatusConverter}, ConverterParameter=StatusFontWeight}"
                               Foreground="{Binding UpdateStatus, Converter={StaticResource UpdateStatusConverter}, ConverterParameter=StatusForeground}"/>
                    <TextBlock Text="  |  " Foreground="DarkGray"/>
                    <TextBlock Text="{Binding Information}" Foreground="DarkGray"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>
        
        <v:ConfigPopup x:Name="ConfigPopup" Margin="26.5,73,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        <v:AboutPopup x:Name="AboutPopup" Margin="26.5,73,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
    </Grid>
</v:AnimatedWindow>
